name: Build and Run Image

on:
  workflow_dispatch:
  push:
    branches: main

env:
  DOCKER_IMAGE_NAME: "node-app-project"

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Generate Image Tag
        run: |
          IMAGE_NAME="$DOCKER_IMAGE_NAME:${{ github.sha }}"
          echo "IMAGE_NAME=$IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }} .
          
      - name: Start minikube
        uses: medyagh/setup-minikube@latest

      - name: Load image to minikube
        run: |
          minikube image load ${{ env.IMAGE_NAME }}
          echo -e "Loaded image ${{ env.IMAGE_NAME }} to minikube.\nListing all images:"
          minikube image ls

      - name: Setup Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: '3.13.1' # default is latest (stable)

      - name: Print rendered manifests in logs
        run: |
          helm template node-app-helm/ \
          --set image.tag="${{ github.sha }}" \
          --set image.repository="$DOCKER_IMAGE_NAME"

      - name: Install helm chart
        run: |
          helm install testing-on-minikube node-app-helm/ \
          --set image.tag="${{ github.sha }}" \
          --set image.repository="$DOCKER_IMAGE_NAME"

      - name: Run kubectl commands for validation
        run: |
          sleep 30
          kubectl get all
          POD_NAME=$(kubectl get pod --selector app=node-app -o=jsonpath='{.items[0].metadata.name}{"\n"}')
          kubectl describe pod $POD_NAME
      
      - name: Print pod logs in console
        run: |
          POD_NAME=$(kubectl get pod --selector app=node-app -o=jsonpath='{.items[0].metadata.name}{"\n"}')
          echo "-------------------------------------------------------------------------"
          echo "POD LOG:"          
          kubectl logs $POD_NAME
          echo "-------------------------------------------------------------------------"
